--------LINUX--------
1. Create a build.cmake somewhere(I put mine in home)
	It can be called whatever you want. The name isn't important.
	If it's called build.cmake it can be safely placed directly in the SUI root folder as it's in the .gitignore file(this is only a concern if you plan on sending a commit)
	This file specifies to cmake where SFML and LUA are
	On linux this is just where the include and libs of SFML and lua are. Most likely the following lines will work if installed through a package manager:
	set(SUI_LIBS sfml-graphics
		sfml-audio
		sfml-window
		sfml-system
		readline
		lua
		dl)
	Otherwise the full paths have to be set.
	On windows A variable called 'DLL_LOCATIONS' pointing the DLLs of lua and sfml are necessary if the build is shared and examples are built(the examples need the dlls)
	It can be set like this:
	set(SFML_DLL_PATH "/path_to_sfml_dll")
	set(LUA_DLL_PATH "/path_to_lua_dll")
	set(SFML_DLL_LOCATIONS "sfml-graphics-2.dll" "sfml-audio-2.dll" "sfml-window-2.dll" "sfml-system-2.dll")
	set(LUA_DLL_LOCATIONS "lua.dll") < don't actually know name yet :) fix when build on windows
2. Create a directory called Build
3. Enter that directory in the terminal
4. type 'cmake -DBUILD_FILE=~/build.cmake ..'
	Of course build.cmake is whatever you named it in step 2
	Optionally you can turn examples off(their generated by default) by adding the option before the '..':
	'-DBUILD_EXAMPLES=OFF'
	Or you can make it a static library:
	'-DSUI_STATIC=ON'
type 'make'
	add the option -jn and make n the number of cores(I have eigtht cores so I use 'make -j8')

done! 'make install' is not currently supported. You can copy it manually yourself though(it's just one file in the Lib folder)
